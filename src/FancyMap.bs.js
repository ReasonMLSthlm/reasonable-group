// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Leaflet = require("leaflet");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Map");

function setRef(theRef, param) {
  param[/* state */1][/* node */0][0] = (theRef == null) ? /* None */0 : [theRef];
  return /* () */0;
}

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var match = self[/* state */1][/* node */0][0];
              if (match) {
                var map = Leaflet.map(match[0], {
                      center: /* tuple */[
                        0,
                        0
                      ],
                      zoom: 13
                    });
                var layer = Leaflet.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                      maxZoom: 18,
                      minZoom: 1,
                      detectRetina: true
                    });
                map.addLayer(layer);
                return /* () */0;
              } else {
                return /* () */0;
              }
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          ref: Curry._1(self[/* handle */0], setRef)
                        });
            }),
          /* initialState */(function () {
              return /* record */[/* node */[/* None */0]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, state) {
              return /* Update */Block.__(0, [state]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.setRef = setRef;
exports.make = make;
/* component Not a pure module */
